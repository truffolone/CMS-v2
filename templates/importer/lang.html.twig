{% extends 'layouts/admin.html.twig' %}

{% block title %}Import Language{% endblock %}

{% block body %}
    <div class="row">
        <h2>Dictionary Import</h2>
    </div>
    <div class="row">
        <form class="form-control">
            <div class="form-group">
                <label for="lang">Language to Import:</label>
                <select name="lang" id="lang">
                    <option value="DE">Deutsch</option>
                    <option value="EN">English</option>
                    <option value="ES">Español</option>
                    <option value="FR">Français</option>
                    <option value="IT" selected="selected">Italiano</option>
                    <option value="PT">Português</option>
                </select>
            </div>
            <button type="submit" id="startImport" class="btn btn-primary">Import!</button>
        </form>
    </div>
    <br>
    <div class="progress">
        <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
    </div>
    <br>
    <div class="row">
        <ul>
            <li>DE: {% if DE %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
            <li>EN: {% if EN %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
            <li>ES: {% if ES %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
            <li>FR: {% if FR %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
            <li>IT: {% if IT %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
            <li>PT: {% if PT %}<i class="fal fa-check" style="color:Green"></i>{% else %}<i class="fal fa-times" style="color:Red"></i>{% endif %}</li>
        </ul>
    </div>
    <h2>
        Log
    </h2>
    <div class="row" id="log">
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
        $(document).ready(function(){
            var ow_txt = 1;
            var start_txt = 0;
            var cycles_txt = 200;
            var baseUrl = "http://s4.echo.tfl/";
            var barValue = 0;
            var progressBar = $("#progressBar");
            var totImport = 0;

            function setVisualValues()
            {
                getVisualValues();
                $("#ow_txt").empty().text(ow_txt.toString());
                $("#start_txt").empty().text(start_txt.toString());
                $("#cycles_txt").empty().text(cycles_txt.toString());
            }

            function getVisualValues()
            {
                if($("#overwrite").is(":checked")) {
                    ow_txt = 1;
                } else {
                    ow_txt = 0;
                }
                start_txt = parseInt($("#start").val());
                cycles_txt = parseInt($("#cycles").val());
            }

            function clearLog()
            {
                $("#log").empty();
            }

            function log(insertText)
            {

                $("#log").prepend(insertText + "<br>");
            }

            function setProgress(value)
            {
                if(value > 100) value = 100;
                barValue = value;
                var valueString = barValue.toString();
                progressBar.css("width", valueString + "%");
                progressBar.empty().text(valueString + "%");
                progressBar.attr("aria-valuenow", valueString);
            }

            function importUsers(start, percPerTranches) {
                log("Importing users from " + start.toString() + " to " + (start + cycles_txt).toString());
                $.get(baseUrl + "importer/importUserData?overwrite=" + ow_txt + "&start=" + start + "&cycles=" + cycles_txt,
                    function(resData){
                        if(resData.result !== 'success') {
                            log("Error!");
                        } else {
                            log("Success!");
                            setProgress((percPerTranches * (Math.floor(start/cycles_txt)+1)).toFixed(2));
                            if(totImport >= start) {
                                importUsers((start + cycles_txt), percPerTranches);
                            }
                        }
                    });
            }

            $("#startImport").click(function(e){
                e.preventDefault();
                clearLog();
                log("Saving Values...");
                setVisualValues();
                log("Values are Set");

                log("Recreating export file");
                $.get(baseUrl + "importer/users2?force=0", function(data) {
                    if(data.result === 'success') {
                        log("json data has been exported!");

                        log("checking users to import");
                        $.get(baseUrl + "importer/usersToImport", function(dataCount) {
                            if(dataCount.result === 'success') {
                                totImport = dataCount.conta;
                                log("Utenti Rilevati: " + totImport.toString());

                                /** set tranches */
                                var tranches = Math.floor(totImport / cycles_txt) + 1;
                                var percPerTranches = (100 / tranches).toFixed(2);

                                /** cycling */
                                importUsers(0, percPerTranches);
                            }
                        });
                    }
                });
            });
        });
    </script>
{% endblock %}
